{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":2097406,"sourceType":"datasetVersion","datasetId":1257880},{"sourceId":7917004,"sourceType":"datasetVersion","datasetId":4651989}],"dockerImageVersionId":30674,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install coral_pytorch","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-03-24T18:21:33.072358Z","iopub.execute_input":"2024-03-24T18:21:33.073192Z","iopub.status.idle":"2024-03-24T18:21:46.233855Z","shell.execute_reply.started":"2024-03-24T18:21:33.073160Z","shell.execute_reply":"2024-03-24T18:21:46.232848Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Collecting coral_pytorch\n  Downloading coral_pytorch-1.4.0-py2.py3-none-any.whl.metadata (1.4 kB)\nRequirement already satisfied: setuptools in /opt/conda/lib/python3.10/site-packages (from coral_pytorch) (69.0.3)\nDownloading coral_pytorch-1.4.0-py2.py3-none-any.whl (7.3 kB)\nInstalling collected packages: coral_pytorch\nSuccessfully installed coral_pytorch-1.4.0\n","output_type":"stream"}]},{"cell_type":"code","source":"import warnings\nwarnings.filterwarnings(\"ignore\")\nimport torch\nimport torch.nn as nn\nimport torchvision\nimport torch.nn.functional as F\nimport torchvision.transforms as transforms\nimport numpy as np\nfrom torchvision.transforms import v2\nfrom torch.utils.data import DataLoader, TensorDataset, Dataset\nfrom PIL import Image\nimport cv2\nimport matplotlib.pyplot as plt\nimport os\nimport timm\nimport random\nimport shutil\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.metrics import confusion_matrix\nfrom torchvision.io import read_image\nimport pytorch_lightning as pl\nfrom coral_pytorch.dataset import corn_label_from_logits\nfrom coral_pytorch.losses import corn_loss","metadata":{"execution":{"iopub.status.busy":"2024-03-24T18:21:46.235963Z","iopub.execute_input":"2024-03-24T18:21:46.236818Z","iopub.status.idle":"2024-03-24T18:21:59.153653Z","shell.execute_reply.started":"2024-03-24T18:21:46.236779Z","shell.execute_reply":"2024-03-24T18:21:59.152859Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"from torchvision.utils import save_image","metadata":{"execution":{"iopub.status.busy":"2024-03-24T19:14:19.923776Z","iopub.execute_input":"2024-03-24T19:14:19.924510Z","iopub.status.idle":"2024-03-24T19:14:19.928532Z","shell.execute_reply.started":"2024-03-24T19:14:19.924467Z","shell.execute_reply":"2024-03-24T19:14:19.927541Z"},"trusted":true},"execution_count":158,"outputs":[]},{"cell_type":"code","source":"class CustomImageDataset(Dataset):\n    def __init__(self, annotations_file, img_dir,transform=None, target_transform=None):\n        self.img_labels = pd.read_csv(annotations_file)\n        self.img_dir = img_dir\n        self.transform = transform\n        self.target_transform = target_transform\n\n    def __len__(self):\n        return len(self.img_labels)\n\n    def __getitem__(self, idx):\n        img_path = os.path.join(self.img_dir,str(self.img_labels.iloc[idx,1]),self.img_labels.iloc[idx, 0])\n        image = read_image(img_path)\n        label = self.img_labels.iloc[idx, 1]\n        if self.transform:\n            image = self.transform(image)\n        if self.target_transform:\n            label = self.target_transform(label)\n        return image, label","metadata":{"execution":{"iopub.status.busy":"2024-03-24T18:22:02.690933Z","iopub.execute_input":"2024-03-24T18:22:02.691745Z","iopub.status.idle":"2024-03-24T18:22:02.699459Z","shell.execute_reply.started":"2024-03-24T18:22:02.691710Z","shell.execute_reply":"2024-03-24T18:22:02.698435Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"train_transformation = transforms.Compose([\n                            transforms.RandomHorizontalFlip(0.5),\n                            v2.RandomAutocontrast(0.80),\n                            v2.RandomEqualize(0.80),\n                            v2.RandomAdjustSharpness(sharpness_factor = 0.8,p = 0.80),\n                            transforms.RandomRotation(4),\n                            v2.ToDtype(torch.float32)\n])","metadata":{"execution":{"iopub.status.busy":"2024-03-24T18:46:32.514065Z","iopub.execute_input":"2024-03-24T18:46:32.514740Z","iopub.status.idle":"2024-03-24T18:46:32.521165Z","shell.execute_reply.started":"2024-03-24T18:46:32.514709Z","shell.execute_reply":"2024-03-24T18:46:32.520212Z"},"trusted":true},"execution_count":95,"outputs":[]},{"cell_type":"code","source":"t_annot = pd.read_csv(\"/kaggle/input/annotations/train_annotation.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-03-24T18:52:03.769312Z","iopub.execute_input":"2024-03-24T18:52:03.769751Z","iopub.status.idle":"2024-03-24T18:52:03.792446Z","shell.execute_reply.started":"2024-03-24T18:52:03.769719Z","shell.execute_reply":"2024-03-24T18:52:03.791610Z"},"trusted":true},"execution_count":107,"outputs":[]},{"cell_type":"code","source":"len_lis = [(len(t_annot[t_annot[\"Labels\"] == label]),label,2286//len(t_annot[t_annot[\"Labels\"] == label])) for label in t_annot[\"Labels\"].unique()]","metadata":{"execution":{"iopub.status.busy":"2024-03-24T19:07:11.989420Z","iopub.execute_input":"2024-03-24T19:07:11.989818Z","iopub.status.idle":"2024-03-24T19:07:12.000520Z","shell.execute_reply.started":"2024-03-24T19:07:11.989786Z","shell.execute_reply":"2024-03-24T19:07:11.999630Z"},"trusted":true},"execution_count":150,"outputs":[]},{"cell_type":"code","source":"img_dir = \"/kaggle/input/knee-osteoarthritis-dataset-with-severity/train\"\nsave_dir = \"/kaggle/working/Augmented_image\"\nos.mkdir(save_dir)\nfor i in len_lis:\n    if(i[1] == 0):\n        continue\n    else:\n        if(i[2] != 1):\n            os.makedirs(os.path.join(save_dir,str(i[1])),exist_ok = True)\n            for j in range(len(t_annot[t_annot[\"Labels\"] == i[1]])):\n                img_path = os.path.join(img_dir,str(i[1]),t_annot[t_annot[\"Labels\"] == i[1]].iloc[j,0])\n                img = read_image(img_path)\n                for k in range(i[2] - 1):\n                    fin_img = train_transformation(img)\n                    save_path = os.path.join(save_dir,str(i[1]),f'{k}_{t_annot[t_annot[\"Labels\"] == i[1]].iloc[j,0]}')\n                    save_image(fin_img,fp = save_path)\n        if(i[2] == 1):\n            os.makedirs(os.path.join(save_dir,str(i[1])),exist_ok = True)\n            for j in range(2286 - len(t_annot[t_annot[\"Labels\"] == i[1]])):\n                img_path = os.path.join(img_dir,str(i[1]),t_annot[t_annot[\"Labels\"] == i[1]].iloc[j,0])\n                img = read_image(img_path)\n                for k in range(1):\n                    fin_img = train_transformation(img)\n                    save_path = os.path.join(save_dir,str(i[1]),f'{k}_{t_annot[t_annot[\"Labels\"] == i[1]].iloc[j,0]}')\n                    save_image(fin_img,fp = save_path)","metadata":{"execution":{"iopub.status.busy":"2024-03-24T19:48:02.991722Z","iopub.execute_input":"2024-03-24T19:48:02.992646Z","iopub.status.idle":"2024-03-24T19:48:45.383370Z","shell.execute_reply.started":"2024-03-24T19:48:02.992611Z","shell.execute_reply":"2024-03-24T19:48:45.382497Z"},"trusted":true},"execution_count":179,"outputs":[]},{"cell_type":"code","source":"os.mkdir(save_dir + \"/0\")","metadata":{"execution":{"iopub.status.busy":"2024-03-24T19:52:29.085420Z","iopub.execute_input":"2024-03-24T19:52:29.086293Z","iopub.status.idle":"2024-03-24T19:52:29.090230Z","shell.execute_reply.started":"2024-03-24T19:52:29.086260Z","shell.execute_reply":"2024-03-24T19:52:29.089395Z"},"trusted":true},"execution_count":187,"outputs":[]},{"cell_type":"code","source":"for i in range(5):\n    src_dir = f\"/kaggle/input/knee-osteoarthritis-dataset-with-severity/train/{i}\"\n    dst_dir = f\"/kaggle/working/Augmented_image/{i}\"\n\n    files=os.listdir(src_dir)\n    for fname in files:\n        shutil.copy2(os.path.join(src_dir,fname), dst_dir)","metadata":{"execution":{"iopub.status.busy":"2024-03-24T19:59:04.557079Z","iopub.execute_input":"2024-03-24T19:59:04.557812Z","iopub.status.idle":"2024-03-24T19:59:04.708946Z","shell.execute_reply.started":"2024-03-24T19:59:04.557778Z","shell.execute_reply":"2024-03-24T19:59:04.708062Z"},"trusted":true},"execution_count":201,"outputs":[]},{"cell_type":"code","source":"shutil.make_archive(\"augmented_images\", 'zip', \"/kaggle/working/Augmented_image\")","metadata":{"execution":{"iopub.status.busy":"2024-03-24T20:00:37.190462Z","iopub.execute_input":"2024-03-24T20:00:37.191435Z","iopub.status.idle":"2024-03-24T20:00:42.290616Z","shell.execute_reply.started":"2024-03-24T20:00:37.191400Z","shell.execute_reply":"2024-03-24T20:00:42.289658Z"},"trusted":true},"execution_count":203,"outputs":[{"execution_count":203,"output_type":"execute_result","data":{"text/plain":"'/kaggle/working/augmented_images.zip'"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}